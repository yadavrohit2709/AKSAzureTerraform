# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'PmAKS'
  bkstrg: 'tfstate012060038838'
  bkcontainer: 'tfstate'
  bkstregkey: 'devpipeline.terraform.tfstate'

steps:
- task: TerraformInstaller@1
  displayName: Terraform Install
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  displayName: Terraform Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'AzureServiceConnection'
    backendAzureRmResourceGroupName: '$(bkstrgrg)'
    backendAzureRmStorageAccountName: '$(bkstrg)'
    backendAzureRmContainerName: '$(bkcontainer)'
    backendAzureRmKey: '$(bkstregkey)'

- task: TerraformTaskV4@4
  displayName: Terraform Plan
  inputs:
    command: 'plan'
    backendServiceArm: 'AzureServiceConnection'

- task: TerraformTaskV4@4
  displayName: Terraform Apply
  inputs:
    command: 'apply'
    backendServiceArm: 'AzureServiceConnection'

- task: TerraformTaskV4@4
  displayName: Terraform Destroy
  inputs:
    provider: 'azurerm'
    command: 'destroy'
    backendServiceArm: 'AzureServiceConnection'


